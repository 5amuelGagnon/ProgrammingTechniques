import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class BullsAndCows {

    public static void main(String[] args) {
        // int[] secret = {2, 0, 6, 9};
        // int[] guessOne = {9, 5, 6, 2};
        // int[] guessTwo = {1, 0, 6, 2};
        // int[] guessThree = {1, 2, 3, 4, 5, 6};
        // int[] guessFour = {1, 3, 4, 4, 0, 5};

        // System.out.println(getNumOfBulls(secret, guessOne));
        // System.out.println(getNumOfBulls(secret, guessTwo));
        // System.out.println(getNumOfBulls(secret, guessThree));
        // System.out.println(getNumOfBulls(secret, guessFour));
        // System.out.println(getNumOfCows(secret, guessOne));
        // System.out.println(getNumOfCows(secret, guessTwo));
        // System.out.println(getNumOfCows(secret, guessThree));
        // System.out.println(getNumOfCows(secret, guessFour));

        playBullsAndCows();

    }

    // 1a) Method to check if an element is contained in a given array

    public static boolean contains(int[] arr, int element) {
        boolean flag = false;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == element) {
                flag = true;
                break;
            }
        }
        return flag;

    }
    // 1b) Method to generate the secret number

    public static int[] generateSecretDigits(int seed) {
        Random r = new Random(seed);
        int[] arr = new int[4];
        int i = 0;
        while (i < 4) {
            int j = r.nextInt(10);

            if (!contains(arr, j)) {
                arr[i] = j;
                i++;
            }
            if (i == 4) {
                break;
            }
        }
        return arr;
    }
    // 1c) Method to get the number of bulls in a guess

    public static int getNumOfBulls(int[] secret, int[] toCheck) {
        if (secret.length != toCheck.length) {
            throw new IllegalArgumentException("You must enter a four-digit number! You just wasted a guess!");
        }
        for (int j = 0; j < toCheck.length; j++) {
            for (int k = j + 1; k < toCheck.length; k++) {
                if (toCheck[k] == toCheck[j]) {
                    throw new IllegalArgumentException("You are not allowed to repeat the same number!");
                }
            }
        }
        int bulls = 0;
        for (int i = 0; i < toCheck.length; i++) {
            if (toCheck[i] == secret[i]) {
                bulls++;
            }
        }
        return bulls;
    }
    // 1d) Method to get the number of cows in a guess

    public static int getNumOfCows(int[] secret, int[] toCheck) {
        if (secret.length != toCheck.length) {
            throw new IllegalArgumentException("You must enter a four-digit number! You just wasted a guess!");
        }
        for (int j = 0; j < toCheck.length; j++) {
            for (int k = j + 1; k < toCheck.length; k++) {
                if (toCheck[k] == toCheck[j]) { // or use .equals()
                    throw new IllegalArgumentException("You are not allowed to repeat the same number!");
                }
            }
        }
        int cows = 0;
        for (int i = 0; i < toCheck.length; i++) {
            if (contains(secret, toCheck[i]) && toCheck[i] != secret[i]) {
                cows++;
            }
        }
        return cows;
    }

    // 1e) Method to simulate a game

    public static void playBullsAndCows() {

        Scanner sc = new Scanner(System.in);
        int[] arr = generateSecretDigits(123);

        System.out.println("Welcome to the game! Have fun!");

        int bulls;
        int cows;

        String choice = "n";

        int guess = 1;

        while (!choice.equalsIgnoreCase("y")) {

            System.out.print("Guess #" + guess + ", Enter a four-digit number, each digit should be unique :");


            try {
                String numStr = sc.nextLine();
                int num = Integer.parseInt(numStr);
                int numLength = numStr.length();

                int[] toCheck = new int[4];


                if (num < 0 || numLength != 4) {
                    System.out.println("You must enter a four-digit number! You just wasted one guess!");
                } else {
                    for (int i = 0; i < 4; i++) {
                        toCheck[i] = Integer.parseInt(String.valueOf(numStr.charAt(i)));
                    }

                    bulls = getNumOfBulls(arr, toCheck);
                    cows = getNumOfCows(arr, toCheck);

                    System.out.println("Bulls: " + bulls);
                    System.out.println("Cows: " + cows);

                    if (bulls == 4 && cows == 0) {
                        System.out.print("Congratulations, you guessed the secret number! ");
                        System.out.print("It took you " + guess + " attempts!");
                        break;
                    }
                }
                guess++;

                if (guess >= 6) {
                    System.out.print("Do you want to quit the game? Answers: y/n ");
                    choice = sc.nextLine();
                    if ("y".equalsIgnoreCase(choice)) {
                        System.out.println("You've decided to quit the game, after making " + guess + " attempts.");
                        System.out.println("The correct number was: " + Arrays.toString(arr));
                        break;
                    }
                }

            } catch (NumberFormatException ex) {
                System.out.println("You must enter a four-digit number! You just wasted one guess!");
                guess++;
            }


        }

    }
}
